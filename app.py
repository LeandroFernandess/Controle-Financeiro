"""Aplica√ß√£o principal para gest√£o financeira pessoal.

Este m√≥dulo constitui o ponto de entrada do sistema, respons√°vel por:
- Configurar a aplica√ß√£o Streamlit
- Gerenciar o estado de autentica√ß√£o do usu√°rio
- Coordenar a navega√ß√£o entre diferentes m√≥dulos
- Controlar o ciclo de vida da sess√£o

Componentes principais:
    - main: Interface de autentica√ß√£o (login/cadastro)
    - logged: Dashboard principal p√≥s-login
    - Controle de estado via st.session_state

M√≥dulos integrados:
    - auth: Gerenciamento de usu√°rios e autentica√ß√£o
    - creditcard: Gest√£o de cart√µes de cr√©dito
    - slips: Controle de boletos
    - income: Gerenciamento de renda
    - fixedaccounts: Contas fixas recorrentes
    - summary: Vis√£o geral consolidada

Fluxo da aplica√ß√£o:
    1. Configura√ß√£o inicial da p√°gina
    2. Verifica√ß√£o do estado de login
    3. Redirecionamento para interface adequada
    4. Gerenciamento de navega√ß√£o e sess√£o
"""

import streamlit as st
from auth.page import *
from creditcard.page import *
from slips.page import *
from income.page import *
from fixedaccounts.page import *
from summary.page import *


st.set_page_config(
    page_title="Gest√£o financeira",
    page_icon="üí∞",
    layout="wide",
    initial_sidebar_state="expanded",
)


def main():
    """Gerencia a interface de autentica√ß√£o e registro de usu√°rios.

    Exibe e controla:
        - Menu lateral com op√ß√µes de login/cadastro/redefini√ß√£o de senha
        - P√°ginas correspondentes √† sele√ß√£o do usu√°rio
        - Transi√ß√µes entre estados de autentica√ß√£o

    Fluxo:
        1. Exibe menu lateral com op√ß√µes de autentica√ß√£o
        2. Carrega m√≥dulo correspondente √† sele√ß√£o
        3. Mant√©m estado at√© autentica√ß√£o bem-sucedida

    Componentes:
        - login_page: Formul√°rio de autentica√ß√£o
        - create_user_page: Formul√°rio de cadastro
        - forgot_password_page: Recupera√ß√£o de credenciais
    """
    st.sidebar.title("Sistema do Usu√°rio")
    menu = st.sidebar.selectbox("Menu", ["Login", "Cadastro", "Redefinir Senha"])

    if menu == "Login":
        login_page()
    elif menu == "Cadastro":
        create_user_page()
    elif menu == "Redefinir Senha":
        forgot_password_page()


def logged():
    """Gerencia o dashboard principal p√≥s-autentica√ß√£o.

    Funcionalidades:
        - Exibe menu de navega√ß√£o entre m√≥dulos
        - Controla logout do usu√°rio
        - Gerencia carregamento dos m√≥dulos espec√≠ficos
        - Mant√©m estado consistente da sess√£o

    Se√ß√µes:
        - Resumo: Vis√£o consolidada (summary_page)
        - Cart√µes de Cr√©dito: Gest√£o de faturas (credit_card_page)
        - Boletos: Controle de pagamentos (slips_page)
        - Contas fixas: Despesas recorrentes (fixed_accounts_page)
        - Renda: Gerenciamento de receitas (income_page)

    Comportamentos:
        - Atualiza interface ao alterar sele√ß√£o no menu
        - Reinicia estado ao efetuar logout
        - Mant√©m sess√£o ativa at√© logout expl√≠cito
    """

    st.sidebar.title("Op√ß√µes de Navega√ß√£o")
    dashboard_menu = st.sidebar.selectbox(
        "Selecione uma op√ß√£o",
        [
            "Resumo",
            "Cart√µes de Cr√©dito",
            "Boletos",
            "Contas fixas",
            "Renda",
        ],
    )

    if st.sidebar.button("Sair"):
        st.session_state["logged_in"] = False
        st.rerun()

    if dashboard_menu == "Resumo":
        summary_page()
    elif dashboard_menu == "Cart√µes de Cr√©dito":
        credit_card_page()
    elif dashboard_menu == "Boletos":
        slips_page()
    elif dashboard_menu == "Contas fixas":
        fixed_accounts_page()
    elif dashboard_menu == "Renda":
        income_page()


if "logged_in" not in st.session_state:
    st.session_state["logged_in"] = False

if st.session_state["logged_in"]:
    logged()
else:
    main()
