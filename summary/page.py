"""M√≥dulo de vis√£o geral financeira para aplicativo Streamlit.

Este m√≥dulo fornece uma interface interativa para an√°lise financeira pessoal,
exibindo informa√ß√µes consolidadas sobre renda, gastos e saldo do usu√°rio.
Integra-se com o sistema de autentica√ß√£o e banco de dados atrav√©s do m√≥dulo queries.

Componentes principais:
    - summary_page: Fun√ß√£o principal que estrutura a p√°gina e l√≥gica de exibi√ß√£o
    - formatar_valor: Fun√ß√£o auxiliar para formata√ß√£o condicional de valores

Funcionalidades:
    * Visualiza√ß√£o de dados financeiros por per√≠odo espec√≠fico
    * Controle de privacidade para ocultar valores sens√≠veis
    * Atualiza√ß√£o manual de dados em tempo real
    * Alertas autom√°ticos sobre situa√ß√£o financeira
    * Detalhamento de gastos por categorias
"""

import streamlit as st
from datetime import datetime
from .queries import search_user_info


def summary_page():
    """Exibe e gerencia a p√°gina de vis√£o geral financeira do usu√°rio.

    Esta fun√ß√£o cria a interface completa da p√°gina de resumo financeiro, incluindo:
    - Verifica√ß√£o de autentica√ß√£o do usu√°rio
    - Controles de sele√ß√£o de per√≠odo (m√™s/ano)
    - Sistema de oculta√ß√£o de valores sens√≠veis
    - Atualiza√ß√£o e cache de dados financeiros
    - Exibi√ß√£o de m√©tricas e gr√°ficos consolidados
    - Alertas contextuais sobre sa√∫de financeira

    Processo:
        1. Verifica autentica√ß√£o via session_state
        2. Configura layout da p√°gina e controles interativos
        3. Recupera/atualiza dados do banco de dados
        4. Calcula m√©tricas e prepara visualiza√ß√µes
        5. Exibe resultados com formata√ß√£o condicional

    Requer:
        - Sess√£o ativa com user_id v√°lido em st.session_state
        - M√≥dulo queries com fun√ß√£o search_user_info operacional

    Side effects:
        - Modifica st.session_state.dados_financeiros para cache
        - Exibe diversos elementos na interface via Streamlit
        - Realiza consultas ao banco de dados atrav√©s de search_user_info

    Mensagens:
        - Erro de autentica√ß√£o se usu√°rio n√£o logado
        - Alerta positivo/negativo conforme saldo restante
    """

    user_id = st.session_state.get("user_id")

    if not user_id:
        st.error("Usu√°rio n√£o autenticado. Por favor, fa√ßa login.")
        return

    st.markdown(
        """
        <h1 style='text-align: center;'>üí∞ Vis√£o Geral</h1>
        <hr>
        """,
        unsafe_allow_html=True,
    )

    mes_atual = datetime.now().month
    ano_atual = datetime.now().year

    col1, col2 = st.columns(2)
    with col1:
        mes = st.selectbox("M√™s", range(1, 13), index=mes_atual - 1)
    with col2:
        ano = st.number_input("Ano", min_value=2000, max_value=2100, value=ano_atual)

    mostrar_valores = st.checkbox("üëÅÔ∏è Mostrar valores", value=False)

    if st.button("Atualizar Dados"):
        st.session_state.pop("dados_financeiros", None)
        dados = search_user_info(user_id, mes, ano)
        st.session_state.dados_financeiros = dados
    else:
        dados = st.session_state.get("dados_financeiros") or search_user_info(
            user_id, mes, ano
        )
        st.session_state.dados_financeiros = dados

    def formatar_valor(valor):
        """Formata valores financeiros com controle de visibilidade.

        Args:
            valor (float): Valor num√©rico a ser formatado

        Returns:
            str: Valor monet√°rio formatado (R$ X.XX) ou m√°scara (***) conforme
                o estado da checkbox 'mostrar_valores'

        Exemplos:
            >>> formatar_valor(1500.5) # Com mostrar_valores=True
            'R$ 1500.50'
            >>> formatar_valor(1500.5) # Com mostrar_valores=False
            '***'
        """
        return f"R$ {valor:.2f}" if mostrar_valores else "***"

    col1, col2, col3 = st.columns(3)
    with col1:
        st.metric("üíµ Renda Mensal", formatar_valor(dados["renda_mensal"]))
    with col2:
        total_gastos = (
            dados["gastos_cartao"]
            + dados["gastos_boletos"]
            + dados["gastos_contas_fixas"]
        )
        st.metric("üí∏ Total de Gastos", formatar_valor(total_gastos))
    with col3:
        saldo_restante = dados["renda_mensal"] - total_gastos
        st.metric("üíπ Saldo Restante", formatar_valor(saldo_restante))

    st.subheader("üìâ Detalhamento dos Gastos")
    col1, col2, col3 = st.columns(3)
    with col1:
        st.write("üí≥ **Cart√£o de Cr√©dito**")
        st.write(formatar_valor(dados["gastos_cartao"]))
    with col2:
        st.write("üìÑ **Boletos**")
        st.write(formatar_valor(dados["gastos_boletos"]))
    with col3:
        st.write("üè† **Contas Fixas**")
        st.write(formatar_valor(dados["gastos_contas_fixas"]))

    st.markdown("---")
    if saldo_restante > 0:
        st.success("üéâ Voc√™ est√° dentro do or√ßamento!")
    elif saldo_restante < 0:
        st.error(
            "‚ö†Ô∏è Aten√ß√£o! Voc√™ est√° gastando mais do que sua renda. Considere revisar seus gastos."
        )
